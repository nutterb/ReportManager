% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/multiSelect.R
\name{multiSelect}
\alias{multiSelect}
\alias{updateMultiSelect}
\alias{replaceMultiSelect}
\title{Shiny Controls for Multi-Select Tools}
\usage{
multiSelect(
  inputId,
  label,
  choices = NULL,
  selected = NULL,
  width = "100\%",
  up_down = FALSE,
  ...
)

updateMultiSelect(
  session,
  inputId,
  input,
  action = c("move_all_right", "move_right", "move_all_left", "move_left", "move_up",
    "move_down")
)

replaceMultiSelect(session, inputId, choices, selected)
}
\arguments{
\item{inputId}{\code{character(1)}. The ID for the input element.}

\item{label}{\code{character(1)}. The label displayed with the element.}

\item{choices}{\code{character}. The choices available for selection.}

\item{selected}{\code{character}. The choices to be marked as selected when
initiating the UI element.}

\item{width}{\code{character(1)}. A CSS style for the width of the control.}

\item{up_down}{\code{logical(1)}. When \code{TRUE}, the "Move Up" and "Move Down"
buttons are displayed, allowing for the selections to be ordered.}

\item{...}{Other arguments to pass to \code{selectInput}.}
}
\description{
Some settings in the Report Manager are chosen by moving
items from one selection box to another. For example, selecting users
to assign to a role is done by moving selected users from a box on
the left side of the UI to a box on the right.

\code{multiSelect} generates the UI components, with an option to include
the "Move Up" and "Move Down" buttons.

\code{updateMultiSelect} manages events for the UI buttons.

\code{replaceMultiSelect} is used to replace the underlying data of the
\code{multiSelect} tool. This is done in cases such as when changing the
role that is in focus for user selection.
}
\details{
The choices provided in \code{choices} and \code{selected} are used to
form a data frame with the columns
\itemize{
\item \code{choices} - The choices available to choose from. These are shown in the order provided.
\item \code{selected} - The choices to initiate as selected. These are shown in the order provided.
\item \code{order} - The order in which selections will appear in the selected box. This is stored internally to manage moving items up and down.
\item \code{display_order} - The order in which the available choices will appear. This is stored to maintain order when moving choices left and right.
}

After making the data frame, it is converted to a JSON string and placed in
a \code{textInput} element named \code{inputId}.

The other elements created in the controls are
\itemize{
\item \verb{[inputId]_unselected} - the \code{selectInput} on the left giving choices available for selection.
\item \verb{[inputId]_selected} - the \code{selectInput} on the right giving the choices selected.
\item \verb{[inputId]_move_right_all} - an \code{actionButton} that moves all choices from the left side to the right side.
\item \verb{[inputId]_move_right} - an \code{actionButton} that moves the selected items in the left side to the right side.
\item \verb{[inputId]_move_left} - an \code{actionButton} that moves the selected items in the right side to the left side.
\item \verb{[inputId]_move_right} - an \code{actionButton} that moves all the items on the right side to the left side.
\item \verb{[inputId]_move_up} - an \code{actionButton} that moves the selected item in the right side up one space.
\item \verb{[inputId]_move_down} - an \code{actionButton} that moves the selected item in the right side down one space.
}
}
