% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/makeReportInstanceSchedule.R
\name{makeReportInstanceSchedule}
\alias{makeReportInstanceSchedule}
\title{Make the Schedule of Report Instances for a Template}
\usage{
makeReportInstanceSchedule(
  frequency,
  frequency_unit,
  offset,
  offset_unit,
  schedule_type,
  start_date,
  end_date = Sys.time(),
  is_offset,
  index_date
)
}
\arguments{
\item{frequency}{\code{integerish(1)}. The number of time units to
increment between instances.}

\item{frequency_unit}{\code{character(1)} One of \verb{c("minute", "hour", "day", "week", "month" or "year")}.}

\item{offset}{\code{integerish(1)} The offset value for overlapping reports.}

\item{offset_unit}{\code{character(1)}. The unit of time in which the \code{offset}
is calculated.}

\item{start_date}{\code{POSIXct(1)}. The start date for the schedule.}

\item{end_date}{\code{POSIXct(1)}. The time to end the report scheduling.}

\item{is_offset}{\code{logical(1)}. When \code{TRUE}, the standard scheduling algorithm
is used. When \code{FALSE}, the period-to-date algorithm is used.}

\item{`index_date`}{\code{POSIXct(1)}. The index date for a period-to-date
format schedule.}
}
\value{
Returns a data frame with the columns \code{StartDate} and \code{EndDate}.
}
\description{
Generate the expected schedule of report instances for
a reporting template based on its scheduling properties.
}
\details{
Two primary types of schedules are considered in this function;
The Standard scheduling algorithm and the Period-to-date algorithm.
Each of these may be scheduled with an offset to allow for overlapping
reports.

The Standard algorithm with a zero-offset calculates the schedule by
adding the frequency of the schedule to the start date until it
reaches the end date. The end date of each instance is then determined
by adding the frequency to the start date of the instance.

The Standard algorithm with a non-zero offset calculate the schedule by
adding the offset of the schedule until it reaches the end date.
The end date of each instance is then determined
by adding the frequency to the start date of the instance.

The Period-to-Date algorithm first develops the schedule as determined in
the previous paragraphs. The start date is then altered to the most
recent anniversary of the index date. For example, if the report has an
index date of January 1 and is a year-to-date report, the start date will
be set to the most recent occurrence of January 1. (Similarly, if the report
is month to date, it will set the start date to the first of the current
month).
}
